// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Compute

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<float> Texture;
RWTexture2D<float4> Result;

RWBuffer<float> buffer;

float near_clip_plane;
float far_clip_plane;
float width, height;

[numthreads(8,8,1)]
void Compute (uint3 id : SV_DispatchThreadID)
{
    buffer[width * id.y + id.x] = Texture[id.xy];
    Result[id.xy] = Texture[id.xy] * 10;
    //Result[int2(id.x, 10)] = 100;
    //buffer[id.y] = Texture[int2(id.x, height / 2)]; 
    //float f = (far_clip_plane / Texture[id.xy] + near_clip_plane) / 100;
   //Result[id.xy] = float4(f, f, f, 0);
}
